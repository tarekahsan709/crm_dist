{"version":3,"sources":["auth/auth.service.js"],"names":["isAuthenticated","hasRole","signToken","setTokenCookie","isValidate","validateJwt","secret","secrets","session","use","req","res","next","query","hasOwnProperty","headers","authorization","access_token","cookies","token","find","where","_id","user","then","status","end","catch","err","roleRequired","Error","meetsRequirements","userRoles","indexOf","role","send","id","sign","expiresIn","cookie","redirect","isEmail","body","dealer_email"],"mappings":"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","file":"auth.service.js","sourcesContent":["'use strict';\n\nimport passport from 'passport';\nimport config from '../config/environment';\nimport jwt from 'jsonwebtoken';\nimport expressJwt from 'express-jwt';\nimport compose from 'composable-middleware';\nimport {User} from'../sqldb';\nimport validator from 'validator';\n\nvar validateJwt = expressJwt({\n    secret: config.secrets.session\n});\n\n/**\n * Attaches the user object to the request if authenticated\n * Otherwise returns 403\n */\nexport function isAuthenticated() {\n    return compose()\n    // Validate jwt\n        .use(function (req, res, next) {\n            // allow access_token to be passed through query parameter as well\n            if (req.query && req.query.hasOwnProperty('access_token')) {\n                req.headers.authorization = 'Bearer ' + req.query.access_token;\n            }\n            // IE11 forgets to set Authorization header sometimes. Pull from cookie instead.\n            if (req.query && typeof req.headers.authorization === 'undefined') {\n                req.headers.authorization = 'Bearer ' + req.cookies.token;\n            }\n            validateJwt(req, res, next);\n        })\n        // Attach user to request\n        .use(function (req, res, next) {\n            User.find({\n                where: {\n                    _id: req.user._id\n                }\n            })\n                .then(user => {\n                    if (!user) {\n                        return res.status(401).end();\n                    }\n                    req.user = user;\n                    next();\n                })\n                .catch(err => next(err));\n        });\n}\n\n/**\n * Checks if the user role meets the minimum requirements of the route\n */\nexport function hasRole(roleRequired) {\n    if (!roleRequired) {\n        throw new Error('Required role needs to be set');\n    }\n\n    return compose()\n        .use(isAuthenticated())\n        .use(function meetsRequirements(req, res, next) {\n            if (config.userRoles.indexOf(req.user.role) >=\n                config.userRoles.indexOf(roleRequired)) {\n                next();\n            } else {\n                res.status(403).send('Forbidden');\n            }\n        });\n}\n\n/**\n * Returns a jwt token signed by the app secret\n */\nexport function signToken(id, role) {\n    return jwt.sign({_id: id, role: role}, config.secrets.session, {\n        expiresIn: 60 * 60 * 5\n    });\n}\n\n/**\n * Set token cookie directly for oAuth strategies\n */\nexport function setTokenCookie(req, res) {\n    if (!req.user) {\n        return res.status(404).send('It looks like you aren\\'t logged in, please try again.');\n    }\n    var token = signToken(req.user._id, req.user.role);\n    res.cookie('token', token);\n    res.redirect('/');\n}\n\nexport function isValidate(req, res, next) {\n    validator.isEmail(req.body.dealer_email);\n    // next();\n}\n"]}