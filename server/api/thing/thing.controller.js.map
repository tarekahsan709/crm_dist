{"version":3,"sources":["api/thing/thing.controller.js"],"names":["index","show","create","upsert","patch","destroy","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","apply","err","reject","save","removeEntity","then","end","handleEntityNotFound","handleError","send","req","findAll","catch","find","where","_id","params","id","body"],"mappings":"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","file":"thing.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/things              ->  index\n * POST    /api/things              ->  create\n * GET     /api/things/:id          ->  show\n * PUT     /api/things/:id          ->  upsert\n * PATCH   /api/things/:id          ->  patch\n * DELETE  /api/things/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport {Thing} from '../../sqldb';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if(entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function(entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if(entity) {\n      return entity.destroy()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if(!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Things\nexport function index(req, res) {\n  return Thing.findAll()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Thing from the DB\nexport function show(req, res) {\n  return Thing.find({\n    where: {\n      _id: req.params.id\n    }\n  })\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Thing in the DB\nexport function create(req, res) {\n  return Thing.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Upserts the given Thing in the DB at the specified ID\nexport function upsert(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n\n  return Thing.upsert(req.body, {\n    where: {\n      _id: req.params.id\n    }\n  })\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing Thing in the DB\nexport function patch(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return Thing.find({\n    where: {\n      _id: req.params.id\n    }\n  })\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Thing from the DB\nexport function destroy(req, res) {\n  return Thing.find({\n    where: {\n      _id: req.params.id\n    }\n  })\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}