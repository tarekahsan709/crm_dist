{"version":3,"sources":["api/employee/employee.controller.js"],"names":["index","show","create","upsert","patch","destroy","respondWithResult","res","statusCode","entity","Array","status","json","entityConverted","reduce","acc","cur","i","patchUpdates","patches","apply","err","reject","save","removeEntity","then","end","handleEntityNotFound","handleError","send","req","findAll","include","model","catch","find","where","_id","params","id","body","data","update"],"mappings":"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","file":"employee.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/employees              ->  index\n * POST    /api/employees              ->  create\n * GET     /api/employees/:id          ->  show\n * PUT     /api/employees/:id          ->  upsert\n * PATCH   /api/employees/:id          ->  patch\n * DELETE  /api/employees/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport {Employee} from '../../sqldb';\nimport {Designation} from '../../sqldb';\n\nfunction respondWithResult(res, statusCode) {\n    statusCode = statusCode || 200;\n    return function (entity) {\n        if (entity && entity != entity instanceof Array) {\n            return res.status(statusCode).json(entity);\n        } else if(entity instanceof Array){\n            var entityConverted = entity.reduce(function(acc, cur, i) {\n                acc[i] = cur;\n                return acc;\n            }, {});\n\n            return res.status(statusCode).json(entityConverted);\n\n        }\n        return null;\n    };\n}\n\nfunction patchUpdates(patches) {\n  return function(entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if(entity) {\n      return entity.destroy()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if(!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Employees\nexport function index(req, res) {\n  return Employee.findAll(\n      {\n          include: [\n              {\n                  model: Designation\n              }\n          ]\n      }\n  )\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Employee from the DB\nexport function show(req, res) {\n  return Employee.find({\n    where: {\n      _id: req.params.id\n    }\n  })\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Employee in the DB\nexport function create(req, res) {\n  return Employee.create(req.body.data)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Upserts the given Employee in the DB at the specified ID\nexport function upsert(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n\n  return Employee.update(req.body, {\n    where: {\n      _id: req.params.id\n    }\n  })\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing Employee in the DB\nexport function patch(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return Employee.find({\n    where: {\n      _id: req.params.id\n    }\n  })\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Employee from the DB\nexport function destroy(req, res) {\n  return Employee.find({\n    where: {\n      _id: req.params.id\n    }\n  })\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}