{"version":3,"sources":["api/vehicle/vehicle.controller.js"],"names":["index","show","create","details","upsert","patch","destroy","respondWithResult","res","statusCode","entity","Array","status","json","entityConverted","reduce","acc","cur","i","patchUpdates","patches","apply","err","reject","save","removeEntity","then","end","handleEntityNotFound","handleError","send","req","findAll","include","model","catch","find","where","_id","params","id","body","data","customerId","detailsResponse","vehicle_id","response","dataValues","customer_id","customer","VehicleMasterId","jobs","update"],"mappings":"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","file":"vehicle.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/vehicles              ->  index\n * POST    /api/vehicles              ->  create\n * GET     /api/vehicles/:id          ->  show\n * PUT     /api/vehicles/:id          ->  upsert\n * PATCH   /api/vehicles/:id          ->  patch\n * DELETE  /api/vehicles/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport {Vehicle} from '../../sqldb';\nimport {VehicleModel} from '../../sqldb';\nimport {CustomerVehicle} from '../../sqldb';\nimport {Customer} from '../../sqldb';\nimport {Job} from '../../sqldb';\n// import {VehicleDetails} from '../../sqldb';\n// import {Dealer} from '../../sqldb';\n\nfunction respondWithResult(res, statusCode) {\n    statusCode = statusCode || 200;\n    return function (entity) {\n        if (entity && entity != entity instanceof Array) {\n            return res.status(statusCode).json(entity);\n        } else if (entity instanceof Array) {\n            var entityConverted = entity.reduce(function (acc, cur, i) {\n                acc[i] = cur;\n                return acc;\n            }, {});\n\n            return res.status(statusCode).json(entityConverted);\n\n        }\n        return null;\n    };\n}\n\nfunction patchUpdates(patches) {\n    return function (entity) {\n        try {\n            jsonpatch.apply(entity, patches, /*validate*/ true);\n        } catch (err) {\n            return Promise.reject(err);\n        }\n\n        return entity.save();\n    };\n}\n\nfunction removeEntity(res) {\n    return function (entity) {\n        if (entity) {\n            return entity.destroy()\n                .then(() => {\n                    res.status(204).end();\n                });\n        }\n    };\n}\n\nfunction handleEntityNotFound(res) {\n    return function (entity) {\n        if (!entity) {\n            res.status(404).end();\n            return null;\n        }\n        return entity;\n    };\n}\n\nfunction handleError(res, statusCode) {\n    statusCode = statusCode || 500;\n    return function (err) {\n        res.status(statusCode).send(err);\n    };\n}\n\n// Gets a list of Vehicles\nexport function index(req, res) {\n\n    return Vehicle.findAll({\n        include: [\n            {\n                model: VehicleModel\n            }\n        ]\n    })\n        .then(respondWithResult(res))\n        .catch(handleError(res));\n}\n\n// Gets a single Vehicle from the DB\nexport function show(req, res) {\n    return Vehicle.find({\n        where: {\n            _id: req.params.id\n        }\n    })\n        .then(handleEntityNotFound(res))\n        .then(respondWithResult(res))\n        .catch(handleError(res));\n}\n\n// Creates a new Vehicle in the DB\nexport function create(req, res) {\n    return Vehicle.create(req.body.data)\n        .then(respondWithResult(res, 201))\n        .catch(handleError(res));\n}\n\nexport function details(req, res) {\n    var customerId;\n    var detailsResponse = {};\n    return CustomerVehicle.find({\n        where: {\n            vehicle_id: req.params.id\n        }\n    }).then(function (response) {\n        // console.log(response.dataValues);\n        customerId = response.dataValues.customer_id;\n        return Customer.find({\n            where: {\n                _id: customerId\n            }\n        })\n    })\n        .then(function (customer) {\n            detailsResponse.customer = customer.dataValues;\n            return Job.findAll({\n                where: {\n                    VehicleMasterId: req.params.id\n                }\n            })\n        })\n        .then(function (jobs) {\n\n            detailsResponse.jobs = jobs;\n\n            return detailsResponse;\n            // return res.status(200).json(detailsResponse);\n        })\n        .then(handleEntityNotFound(res))\n        .then(respondWithResult(res))\n        .catch(handleError(res));\n}\n\n// Upserts the given Vehicle in the DB at the specified ID\nexport function upsert(req, res) {\n    if (req.body._id) {\n        delete req.body._id;\n    }\n\n    return Vehicle.update(req.body, {\n        where: {\n            _id: req.params.id\n        }\n    })\n        .then(respondWithResult(res))\n        .catch(handleError(res));\n}\n\n// Updates an existing Vehicle in the DB\nexport function patch(req, res) {\n    if (req.body._id) {\n        delete req.body._id;\n    }\n    return Vehicle.find({\n        where: {\n            _id: req.params.id\n        }\n    })\n        .then(handleEntityNotFound(res))\n        .then(patchUpdates(req.body))\n        .then(respondWithResult(res))\n        .catch(handleError(res));\n}\n\n// Deletes a Vehicle from the DB\nexport function destroy(req, res) {\n    return Vehicle.find({\n        where: {\n            _id: req.params.id\n        }\n    })\n        .then(handleEntityNotFound(res))\n        .then(removeEntity(res))\n        .catch(handleError(res));\n}\n// include: [VehicleModel, VehicleDetails]\n\n\n// // Gets a list of Vehicles\n// export function index(req, res) {\n//     return Vehicle.findAll({\n//         include: [\n//             {\n//                 model: VehicleModel\n//             }, {\n//                 model: VehicleDetails,\n//                 include: [\n//                     {\n//                         model: Dealer\n//                     }\n//                 ]\n//             }\n//         ]\n//     })\n//         .then(respondWithResult(res))\n//         .catch(handleError(res));\n// }\n\n"]}