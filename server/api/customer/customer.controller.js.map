{"version":3,"sources":["api/customer/customer.controller.js"],"names":["index","show","create","details","getByPhone","upsert","patch","destroy","respondWithResult","res","statusCode","entity","Array","status","json","entityConverted","reduce","acc","cur","i","patchUpdates","patches","apply","err","reject","save","removeEntity","then","end","handleEntityNotFound","handleError","send","req","findAll","catch","find","where","_id","params","id","body","customer_id","response","vehicleIds","map","vehicle","vehicle_id","include","model","customer_phone"],"mappings":"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","file":"customer.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/customers              ->  index\n * POST    /api/customers              ->  create\n * GET     /api/customers/:id          ->  show\n * PUT     /api/customers/:id          ->  upsert\n * PATCH   /api/customers/:id          ->  patch\n * DELETE  /api/customers/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport {Customer} from '../../sqldb';\nimport {CustomerVehicle} from '../../sqldb';\nimport {Vehicle} from '../../sqldb';\nimport {VehicleModel} from '../../sqldb';\n\nfunction respondWithResult(res, statusCode) {\n    statusCode = statusCode || 200;\n    return function (entity) {\n        if (entity && entity != entity instanceof Array) {\n            return res.status(statusCode).json(entity);\n        } else if (entity instanceof Array) {\n            var entityConverted = entity.reduce(function (acc, cur, i) {\n                acc[i] = cur;\n                return acc;\n            }, {});\n\n            return res.status(statusCode).json(entityConverted);\n        }\n        return null;\n    };\n}\n\nfunction patchUpdates(patches) {\n    return function (entity) {\n        try {\n            jsonpatch.apply(entity, patches, /*validate*/ true);\n        } catch (err) {\n            return Promise.reject(err);\n        }\n\n        return entity.save();\n    };\n}\n\nfunction removeEntity(res) {\n    return function (entity) {\n        if (entity) {\n            return entity.destroy()\n                .then(() => {\n                    res.status(204).end();\n                });\n        }\n    };\n}\n\nfunction handleEntityNotFound(res) {\n    return function (entity) {\n        if (!entity) {\n            res.status(404).end();\n            return null;\n        }\n        return entity;\n    };\n}\n\nfunction handleError(res, statusCode) {\n    statusCode = statusCode || 500;\n    return function (err) {\n        res.status(statusCode).send(err);\n    };\n}\n\n// Gets a list of Customers\nexport function index(req, res) {\n    return Customer.findAll()\n        .then(respondWithResult(res))\n        .catch(handleError(res));\n}\n\n// Gets a single Customer from the DB\nexport function show(req, res) {\n    return Customer.find({\n        where: {\n            _id: req.params.id\n        }\n    })\n        .then(handleEntityNotFound(res))\n        .then(respondWithResult(res))\n        .catch(handleError(res));\n}\n\n// Creates a new Customer in the DB\nexport function create(req, res) {\n    return Customer.create(req.body)\n        .then(respondWithResult(res, 201))\n        .catch(handleError(res));\n}\n\nexport function details(req, res) {\n\n    return CustomerVehicle.findAll({\n        where: {\n            customer_id: req.params.id\n        }\n    }).then(function (response) {\n\n        var vehicleIds = response.map(function (vehicle) {\n           return vehicle.vehicle_id;\n        });\n        // console.log(vehicleIds);\n        // return vehicleIds;\n        return Vehicle.findAll({\n            include: [\n                {\n                    model: VehicleModel\n                }\n            ],\n            where: {\n                _id:vehicleIds\n            }\n        })\n    })\n        .then(handleEntityNotFound(res))\n        .then(respondWithResult(res))\n        .catch(handleError(res));\n}\n\n\n\nexport function getByPhone(req, res) {\n    return Customer.find({\n        where: {\n            customer_phone: req.params.id\n        }\n    })\n        .then(handleEntityNotFound(res))\n        .then(respondWithResult(res))\n        .catch(handleError(res));\n}\n\n// Upserts the given Customer in the DB at the specified ID\nexport function upsert(req, res) {\n    if (req.body._id) {\n        delete req.body._id;\n    }\n\n    return Customer.upsert(req.body, {\n        where: {\n            _id: req.params.id\n        }\n    })\n        .then(respondWithResult(res))\n        .catch(handleError(res));\n}\n\n// Updates an existing Customer in the DB\nexport function patch(req, res) {\n    if (req.body._id) {\n        delete req.body._id;\n    }\n    return Customer.find({\n        where: {\n            _id: req.params.id\n        }\n    })\n        .then(handleEntityNotFound(res))\n        .then(patchUpdates(req.body))\n        .then(respondWithResult(res))\n        .catch(handleError(res));\n}\n\n// Deletes a Customer from the DB\nexport function destroy(req, res) {\n    return Customer.find({\n        where: {\n            _id: req.params.id\n        }\n    })\n        .then(handleEntityNotFound(res))\n        .then(removeEntity(res))\n        .catch(handleError(res));\n}\n\n\n//\n// export function details(req, res) {\n//     var customerId;\n//     var detailsResponse = {};\n//     return CustomerVehicle.find({\n//         where: {\n//             customer_id: req.params.id\n//         }\n//     }).then(function (response) {\n//         customerId = response.dataValues.customer_id;\n//         return Customer.find({\n//             where: {\n//                 _id: customerId\n//             }\n//         })\n//     })\n//         .then(function (customer) {\n//             detailsResponse.customer = customer.dataValues;\n//             return Job.findAll({\n//                 where: {\n//                     VehicleMasterId: req.params.id\n//                 }\n//             })\n//         })\n//         .then(function (jobs) {\n//\n//             detailsResponse.jobs = jobs;\n//\n//             return detailsResponse;\n//             // return res.status(200).json(detailsResponse);\n//         })\n//         .then(handleEntityNotFound(res))\n//         .then(respondWithResult(res))\n//         .catch(handleError(res));\n// }"]}