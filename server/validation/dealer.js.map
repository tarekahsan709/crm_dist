{"version":3,"sources":["validation/dealer.js"],"names":["isDataValid","Joi","require","schema","object","keys","dealer_name","string","alphanum","min","max","required","dealer_email","email","dealer_phone","number","integer","dealer_type","with","without","req","res","next","result","validate","body","error","status","json"],"mappings":";;;;;QAcgBA,W,GAAAA,W;AAdhB,IAAMC,MAAMC,QAAQ,KAAR,CAAZ;;AAEA,IAAMC,SAASF,IAAIG,MAAJ,GAAaC,IAAb,CAAkB;AAC7BC,iBAAaL,IAAIM,MAAJ,GAAaC,QAAb,GAAwBC,GAAxB,CAA4B,CAA5B,EAA+BC,GAA/B,CAAmC,EAAnC,EAAuCC,QAAvC,EADgB;AAE7BC,kBAAcX,IAAIM,MAAJ,GAAaM,KAAb,GAAqBF,QAArB,EAFe;AAG7BG,kBAAcb,IAAIc,MAAJ,GAAaC,OAAb,GAAuBP,GAAvB,CAA2B,EAA3B,CAHe;AAI7BQ,iBAAahB,IAAIM,MAAJ,GAAaC,QAAb,GAAwBC,GAAxB,CAA4B,CAA5B,EAA+BC,GAA/B,CAAmC,EAAnC;AAJgB,CAAlB,EAKZQ,IALY,CAKP,aALO,EAKQ,cALR,EAKwBC,OALxB,CAKgC,cALhC,EAKgD,aALhD,CAAf;;AAQA;AACA;;;AAGO,SAASnB,WAAT,CAAqBoB,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqC;AACxC,QAAMC,SAAStB,IAAIuB,QAAJ,CAAaJ,IAAIK,IAAjB,EAAuBtB,MAAvB,CAAf;AACA,QAAIoB,OAAOG,KAAP,KAAiB,IAArB,EAA2B;AACvBJ;AACH,KAFD,MAEO;AACH,eAAOD,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,OAAOG,KAA5B,CAAP;AACH;AACJ","file":"dealer.js","sourcesContent":["const Joi = require('joi');\n\nconst schema = Joi.object().keys({\n    dealer_name: Joi.string().alphanum().min(3).max(30).required(),\n    dealer_email: Joi.string().email().required(),\n    dealer_phone: Joi.number().integer().min(10),\n    dealer_type: Joi.string().alphanum().min(3).max(30)\n}).with('dealer_name', 'dealer_email').without('dealer_phone', 'dealer_type');\n\n\n// You can also pass a callback which will be called synchronously with the validation result.\n// Joi.validate({ username: 'abc', birthyear: 1994 }, schema, function (err, value) { });  // err === null -> valid\n\n\nexport function isDataValid(req, res, next) {\n    const result = Joi.validate(req.body, schema);\n    if (result.error === null) {\n        next();\n    } else {\n        return res.status(400).json(result.error);\n    }\n}\n\n"]}